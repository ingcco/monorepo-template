name: NodeJS with Webpack

on:
  pull_request:
    branches: ['main']
    paths:
      - 'apps/**'
      - 'packages/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Yarn
        run: |
          yarn set version 4.0.2
          echo "YARN_VERSION=$(yarn -v)" >> $GITHUB_OUTPUT

      - name: Get cache dir path
        id: yarn-cache-dir-path
        run: echo "CACHE_DIR=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Yarn Cache - PnP
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ steps.set-version.outputs.YARN_VERSION }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-

      - name: Install Dependencies
        run: yarn install

      - name: Path Changes Filter
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            apps:
              - 'apps/**'

      - name: Build Changed Apps
        if: steps.changes.outputs.apps == 'true'
        run: |
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^apps/' | xargs -I {} dirname {} | uniq)
          for DIR in $CHANGED_DIRS; do
            WORKSPACE_NAME=$(basename $DIR)
            if [ -f "$DIR/package.json" ]; then
              echo "Building workspace $WORKSPACE_NAME"
              yarn workspace $WORKSPACE_NAME build:prod
              BUILD_STATUS=$?
              if [ $BUILD_STATUS -ne 0 ]; then
                echo "Build failed in workspace $WORKSPACE_NAME"
                exit $BUILD_STATUS
              else
                echo "Build succeeded in workspace $WORKSPACE_NAME"
              fi
            fi
          done
